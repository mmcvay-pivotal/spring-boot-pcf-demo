resources:
- name: git-assets
  type: git
  source:
    uri: https://github.com/mmcvay-pivotal/spring-boot-pcf-demo

- name: release
  type: s3
  source:
    regexp: demo-(.*).jar
    endpoint: http://192.168.99.100:9000
    bucket: dxc
    access_key_id: miniokey
    secret_access_key: miniosecretkey
    disable_ssl: true

#- name: release
#  type: s3
#  source:
#    bucket: ((aws-bucket-name))
#    region_name: ((aws-region-name))
#    access_key_id: ((aws-access-key))
#    secret_access_key: ((aws-secret-key))
#    versioned_file: ((aws-file-name))

- name: PCF
  type: cf
  source:
    api: ((pcf-api))
    username: ((pcf-username))
    password: ((pcf-password))
    organization: ((pcf-org))
    space: ((pcf-space))
    skip_cert_check: false

jobs:
- name: build-artifact
  serial: true
  plan:
  - get: git-assets
    trigger: true
  - task: mvn-package
    privileged: true
    file: git-assets/pipeline/tasks/package.yml
  - put: release
    params:
      file: mvn-package-output/demo-0.0.1-SNAPSHOT.jar
      acl: public-read

- name: deploy-app
  serial: true
  public: true
  plan:
  - get: git-assets
    trigger: true
    passed:
    - build-artifact
  - get: release
    passed:
    - build-artifact
  - task: get-app-info
    file: git-assets/pipeline/tasks/app-info.yml
    params:
      CF_APP: ((pcf-appname))
      CF_APP_DOMAIN: ((pcf-app-domain))
      CF_API: ((pcf-api))
      CF_ORG: ((pcf-org))
      CF_USER: ((pcf-username))
      CF_PWD: ((pcf-password))
      CF_SPACE: ((pcf-space))
  - task: generate-manifest
    file: git-assets/pipeline/tasks/generate-manifest.yml
    params:
      CF_APP: ((pcf-appname))
      APP_PACKAGE: ../release/demo-0.0.1-SNAPSHOT.jar
  - put: PCF
    params:
      manifest: manifest-output/manifest.yml

- name: integration-test
  serial: true
  public: true
  plan:
  - get: git-assets
    trigger: true
    passed:
    - deploy-app
  - task: get-app-info
    file: git-assets/pipeline/tasks/app-info.yml
    params:
      CF_APP: ((pcf-appname))
      CF_APP_DOMAIN: ((pcf-app-domain))
      CF_API: ((pcf-api))
      CF_ORG: ((pcf-org))
      CF_USER: ((pcf-username))
      CF_PWD: ((pcf-password))
      CF_SPACE: ((pcf-space))
  - task: run-integration-tests
    file: git-assets/pipeline/tasks/integration-test.yml
    params:
      CF_APP: ((pcf-appname))
      CF_APP_DOMAIN: ((pcf-app-domain))

- name: ship-it
  serial: true
  public: true
  plan:
  - get: git-assets
    trigger: true
    passed:
    - integration-test
  - task: get-app-info
    file: git-assets/pipeline/tasks/app-info.yml
    params:
      CF_APP: ((pcf-appname))
      CF_APP_DOMAIN: ((pcf-app-domain))
      CF_API: ((pcf-api))
      CF_ORG: ((pcf-org))
      CF_USER: ((pcf-username))
      CF_PWD: ((pcf-password))
      CF_SPACE: ((pcf-space))
  - task: switch-app-routes
    file: git-assets/pipeline/tasks/update-route.yml
    params:
      CF_APP: ((pcf-appname))
      CF_APP_DOMAIN: ((pcf-app-domain))
      CF_API: ((pcf-api))
      CF_ORG: ((pcf-org))
      CF_USER: ((pcf-username))
      CF_PWD: ((pcf-password))
      CF_SPACE: ((pcf-space))
